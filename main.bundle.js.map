{"version":3,"sources":["/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/$_gendir lazy","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/app.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/app.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/app.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/channels/channels.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/channels/channels.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/channels/channels.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/login/login.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/login/login.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/login/login.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/message-send/message-send.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/message-send/message-send.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/message-send/message-send.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/messages/messages.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/messages/messages.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/messages/messages.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/users/users.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/users/users.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/users/users.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.routes.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.service.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.routes.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.component.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.html","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.module.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.routes.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/channel.dto.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/channels.service.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/message.dto.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/messages.service.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/rest.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/user.dto.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/users.service.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/environments/environment.ts","/home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from '@angular/router';\n\nimport { UsersService } from './rest/users.service';\nimport { UserDto } from './rest/user.dto';\nimport { ChannelDto } from './rest/channel.dto';\nimport { ChannelsService } from './rest/channels.service';\n\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.html'\n})\n\nexport class AppComponent implements OnInit {\n\tauthorized = false;\n\tuser: UserDto;\n\tchannel: ChannelDto;\n\tchannelService: ChannelsService;\n\n\tconstructor(private usersService: UsersService,\n\t\t\t\tprivate router: Router) { }\n\n\trunStream() {\n\t\tthis.stream().subscribe(b => console.log(b));\n\t}\n\n\tstream() {\n\t\tconst subj = new Subject();\n\t\tsetInterval( () => {\n\t\t\tsubj.next(Date.now()); // кидаем по потоку каждую сек дату\n\t\t}, 1000);\n\t\treturn subj;\n\t}\n\n\tsignOut() {\n\t\tlocalStorage.removeItem('user');\n\t\tthis.usersService.destroy();\n\t\tthis.updateAuthorized();\n\t\t// this.router.navigate(['/', ]);\n\t}\n\n\tngOnInit() {\n\t\tthis.user = this.getUserFromStorage();\n\t\tthis.updateAuthorized();\n\t}\n\n\tsetUser(user: UserDto) {\n\t\tthis.user = user;\n\t\tthis.setUserFromStorage(user);\n\t\tthis.updateAuthorized();\n\t}\n\n\tsetChannel(channel: ChannelDto) {\n\t\tthis.channel = channel;\n\t\tthis.channelService.add(channel);\n\t}\n\n\tprivate updateAuthorized() {\n\t\tthis.authorized = !!this.user;\n\t\tif (this.authorized) {\n\t\t\tthis.usersService.init();\n\t\t} else {\n\t\t\tthis.usersService.destroy();\n\t\t}\n\t}\n\n\tprivate getUserFromStorage(): UserDto {\n\t\tconst data = window.localStorage.getItem('user');\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\treturn new UserDto(JSON.parse(data));\n\t}\n\n\tprivate setUserFromStorage(user: UserDto) {\n\t\twindow.localStorage.setItem('user', JSON.stringify(user));\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/app.component.ts","module.exports = \"<div *ngIf=\\\"!authorized\\\" class=\\\"no-user\\\">\\n\\t<button \\n\\ttype=\\\"button\\\"\\n\\t(click)=\\\"runStream()\\\">\\n\\t\\tRun\\n\\t</button>\\n\\t<div class=\\\"add-user\\\">\\n\\t\\t<app-login (sent)=\\\"setUser($event)\\\">\\n\\t\\t</app-login>\\n\\t</div>\\n</div>\\n\\n<div *ngIf=\\\"authorized\\\" class=\\\"full-height\\\">\\n\\t<router-outlet></router-outlet>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/app.html\n// module id = ../../../../../src/app/app.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\n\nimport { UsersService } from './rest/users.service';\nimport { ChannelsService } from './rest/channels.service';\nimport { MessagesService } from './rest/messages.service';\n\n\nimport { ChannelModule } from './containers/channel/channel.module';\nimport { NewChannelModule } from './containers/new-channel/new-channel.module';\n\nimport { channelRoutes } from './containers/channel/channel.routes';\nimport { newChannelRoutes } from './containers/new-channel/new-channel.routes';\n\n\nimport { LoginModule } from './components/login/login.module';\nimport { UsersModule } from './components/users/users.module';\nimport { MessagesModule } from './components/messages/messages.module';\nimport { MessageSendModule } from './components/message-send/message-send.module';\nimport { ChannelsModule } from './components/channels/channels.module';\n\nconst appRoutes: Routes = [\n\t{\n\t\tpath: '',\n\t\tredirectTo: 'channel',\n\t\tpathMatch: 'full'\n\t},\n\t...channelRoutes,\n\t...newChannelRoutes\n];\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule, // тепер можем форми використовувать\n\t\tLoginModule,\n\t\tNewChannelModule,\n\t\tUsersModule,\n\t\tChannelsModule,\n\t\tMessagesModule,\n\t\tMessageSendModule,\n\t\tChannelModule,\n\t\tRouterModule.forRoot(appRoutes),\n\t],\n\tdeclarations: [\n\t\tAppComponent\n\t],\n\tproviders: [\n\t\tUsersService,\n\t\tChannelsService,\n\t\tMessagesService\n\t],\n\tbootstrap: [\n\t\tAppComponent\n\t]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/app.module.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ChannelsService } from './../../rest/channels.service';\nimport { ChannelDto } from './../../rest/channel.dto';\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Router, ActivatedRoute } from '@angular/router';\n\ninterface ChannelParams {\n\tchannelId: number;\n}\n\n@Component({\n    selector: 'app-channels',\n    templateUrl: './channels.html'\n})\n\nexport class ChannelsComponent implements OnInit, OnDestroy {\n    @Input() currentChannel: ChannelDto;\n\n    id: number;\n    name: string;\n    private sub: Subscription;\n    channels: ChannelDto[] = [];\n\n    constructor( private channelsService: ChannelsService,\n                 private router: Router,\n                 route: ActivatedRoute ) {\n                    route.params.subscribe((params: ChannelParams) => {\n                        this.id = +params.channelId;\n                    });\n    }\n\n    ngOnInit() {\n        this.sub = this.channelsService.get().subscribe(channels => this.channels = channels);\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/channels/channels.component.ts","module.exports = \"<ul class=\\\"channels\\\">\\n    <li *ngFor=\\\"let channel of channels\\\" class=\\\"channels-list-item\\\">\\n            <a [routerLink]=\\\"['/channel/' + channel.id]\\\" class=\\\"channels-link\\\" >\\n                # {{channel.name}}</a>\\n       <span *ngIf=\\\"currentChannel.id === channel.id\\\"> (current)</span>\\n    </li>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/channels/channels.html\n// module id = ../../../../../src/app/components/channels/channels.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { ChannelsComponent } from './channels.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tRouterModule\n\t],\n\tdeclarations: [\n\t\tChannelsComponent\n    ],\n    exports: [\n\t\tChannelsComponent\n\t]\n})\nexport class ChannelsModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/channels/channels.module.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { UsersService } from '../../rest/users.service';\nimport { UserDto } from '../../rest/user.dto';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.html'\n})\n\nexport class LoginComponent {\n    @Output() sent = new EventEmitter();\n    @Input() userName: string;\n\n\n    constructor(private usersService: UsersService) { }\n\n    submit() {\n        if (this.userName.length < 2) {\n            return;\n        }\n        const user = new UserDto();\n        user.id = (new Date).getTime();\n        user.name = this.userName;\n        this.usersService.add(user).subscribe(() => {\n            this.sent.emit(user);\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/login/login.component.ts","module.exports = \"<input \\n    class=\\\"add-user-field\\\" \\n    type=\\\"text\\\" \\n    name=\\\"userName\\\"\\n    placeholder=\\\"Enter a name\\\"\\n    [(ngModel)]=\\\"userName\\\">\\n<br>\\n\\n<button type=\\\"button\\\" (click)=\\\"submit()\\\" class=\\\"add-user-btn\\\">\\n    Sign in\\n</button> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/login/login.html\n// module id = ../../../../../src/app/components/login/login.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule // тепер можем форми використовувать\n\t],\n\tdeclarations: [\n\t\tLoginComponent\n    ],\n    exports: [\n\t\tLoginComponent\n\t]\n})\nexport class LoginModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/login/login.module.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MessagesService } from '../../rest/messages.service';\nimport { MessageDto } from './../../rest/message.dto';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChannelsService } from '../../rest/channels.service';\n\n@Component({\n    selector: 'app-message-send',\n    templateUrl: './message-send.html'\n})\n\nexport class MessageSendComponent {\n    @Output() sent = new EventEmitter<never>();\n    @Input() userId: number;\n    @Input() channelId: number;\n\n    textMessage: string;\n\n    constructor(private messagesService: MessagesService,\n        private channelsService: ChannelsService) {\n     }\n\n    send() {\n        if (this.textMessage.length < 1) {\n            return;\n        }\n        const message = new MessageDto();\n        message.date = new Date(Date.now());\n        message.text = this.textMessage;\n        message.userId = this.userId;\n        message.channelId = this.channelId;\n        this.textMessage = '';\n        this.messagesService.add(message).subscribe(() => {\n            this.sent.emit();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/message-send/message-send.component.ts","module.exports = \"<form \\n    class=\\\"message-send\\\"\\n    (submit)=\\\"send()\\\">\\n\\n<input \\n    class=\\\"message-send-field\\\"\\n    type=\\\"text\\\"\\n    name=\\\"textMessage\\\"\\n    placeholder=\\\"Enter a message\\\"\\n    [(ngModel)]=\\\"textMessage\\\">\\n\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/message-send/message-send.html\n// module id = ../../../../../src/app/components/message-send/message-send.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { MessageSendComponent } from './message-send.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule // тепер можем форми використовувать\n\t],\n\tdeclarations: [\n\t\tMessageSendComponent\n    ],\n    exports: [\n\t\tMessageSendComponent\n\t]\n})\nexport class MessageSendModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/message-send/message-send.module.ts","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { UsersService } from './../../rest/users.service';\nimport { UserDto } from './../../rest/user.dto';\nimport { MessagesService } from './../../rest/messages.service';\nimport { MessageDto } from './../../rest/message.dto';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-messages',\n    templateUrl: './messages.html'\n})\n\nexport class MessagesComponent implements OnInit, OnDestroy {\n    @Input() channelId: number;\n    private messagesSub: Subscription;\n    private usersSub: Subscription;\n\n    id: number;\n    users: UserDto[] = [];\n    messages: MessageDto[] = [];\n\n    constructor (\n        private usersService: UsersService,\n        private messagesService: MessagesService,\n        private router: Router, route: ActivatedRoute ) {\n\n        route.params.subscribe((params) => {\n\t\t\tthis.id = +params.channelId;\n        });\n    }\n\n    ngOnInit() {\n        this.messagesService.init();\n        this.messagesSub = this.messagesService.get()\n                .subscribe(messages => this.messages = messages.filter(message => {\n                    if (this.id === undefined || isNaN(this.id) ) {\n                        return message;\n                    } else {\n                        return message.channelId === this.id;\n                    }\n                }));\n        this.usersSub = this.usersService.get().subscribe(users => this.users = users);\n    }\n\n    getUserName(userId: number): string {\n        const user = this.users.find(u => u.id === userId);\n        if (!user) { return; }\n        return user.name;\n    }\n\n    ngOnDestroy() {\n        this.messagesSub.unsubscribe();\n        this.usersSub.unsubscribe();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/messages/messages.component.ts","module.exports = \"<ul class=\\\"messages\\\">\\n    <li *ngFor=\\\"let message of messages\\\">\\n        <span class=\\\"message-user\\\">{{getUserName(message.userId)}}</span>\\n        <span class=\\\"message-date\\\">{{message.date | date: 'h:mm'}}</span>\\n        <div class=\\\"message-text\\\">{{message.text}}</div>    \\n    </li>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/messages/messages.html\n// module id = ../../../../../src/app/components/messages/messages.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { MessagesComponent } from './messages.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule // тепер можем форми використовувать\n\t],\n\tdeclarations: [\n\t\tMessagesComponent\n    ],\n    exports: [\n\t\tMessagesComponent\n\t]\n})\nexport class MessagesModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/messages/messages.module.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { UsersService } from './../../rest/users.service';\nimport { UserDto } from './../../rest/user.dto';\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\n\n@Component({\n    selector: 'app-users',\n    templateUrl: './users.html'\n})\n\nexport class UsersComponent implements OnInit, OnDestroy {\n    @Input() currentUser: UserDto;\n\n    private sub: Subscription;\n    users: UserDto[] = [];\n\n    constructor( private usersService: UsersService) {}\n\n    ngOnInit() {\n        this.sub = this.usersService.get().subscribe(users => this.users = users);\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/users/users.component.ts","module.exports = \"<ul class=\\\"users\\\">\\n    <li *ngFor=\\\"let user of users\\\">\\n        &#9679; {{user.name}}\\n        <span *ngIf=\\\"currentUser.id === user.id\\\"> (you)</span>\\n    </li>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/users/users.html\n// module id = ../../../../../src/app/components/users/users.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { UsersComponent } from './users.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule // тепер можем форми використовувать\n\t],\n\tdeclarations: [\n\t\tUsersComponent\n    ],\n    exports: [\n\t\tUsersComponent\n\t]\n})\nexport class UsersModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/components/users/users.module.ts","import { Component, Input, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ChannelDetailsSevice } from './channel-details.service';\nimport { UserDto } from '../../../rest/user.dto';\nimport { MessageDto } from '../../../rest/message.dto';\nimport { UsersService } from '../../../rest/users.service';\nimport { MessagesService } from '../../../rest/messages.service';\nimport { ChannelDto } from '../../../rest/channel.dto';\nimport { ChannelsService } from '../../../rest/channels.service';\n\ninterface ChannelParams {\n\tchannelId: number;\n}\n\n@Component({\n\tselector: 'app-channel-details',\n\ttemplateUrl: './channel-details.html',\n\tproviders: [\n\t\tChannelDetailsSevice\n\t]\n})\n\nexport class ChannelDetailsComponent  implements OnInit {\n\n\tid: number;\n\tname: string;\n    channelMessages: MessageDto[] = [];\n\tuser: UserDto;\n\tchannels: ChannelDto[] = [];\n\n    private sub: Subscription;\n    private usersSub: Subscription;\n\n\tconstructor ( private usersService: UsersService,\n                  private messagesService: MessagesService,\n                  private channelsService: ChannelsService,\n                  private router: Router, route: ActivatedRoute) {\n                    route.params.subscribe((params: ChannelParams) => {\n        \t\t\tthis.id = +params.channelId;\n\t\t        \tthis.name = this.getChannelName(this.id);\n        });\n    }\n\n    ngOnInit() {\n\t    this.user = this.getUserFromStorage();\n    }\n\n\tgetChannelName(channelId: number) {\n\t\tthis.sub = this.channelsService.get().subscribe(channels => this.channels = channels);\n        const channel = this.channels.find(item => item.id === channelId);\n        if (!channel) {\n            return;\n        }\n        return channel.name;\n    }\n\n    private getUserFromStorage(): UserDto {\n        const data = window.localStorage.getItem('user');\n        if (!data) {\n            return;\n        }\n        return new UserDto(JSON.parse(data));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.component.ts","module.exports = \"<div class=\\\"content-messages\\\">\\n    <h1>{{name}}</h1>\\n    <app-messages></app-messages>\\n</div>\\n\\n<div class=\\\"content-message-send\\\">\\n    <app-message-send [userId]=\\\"user.id\\\" [channelId]=\\\"id\\\"></app-message-send>\\n</div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.html\n// module id = ../../../../../src/app/containers/channel/channel-details/channel-details.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n\nimport { ChannelDetailsComponent } from './channel-details.component';\nimport { MessagesModule } from '../../../components/messages/messages.module';\nimport { MessageSendModule } from '../../../components/message-send/message-send.module';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tRouterModule,\n\t\tMessagesModule,\n\t\tMessageSendModule\n\t],\n\tdeclarations: [\n\t\tChannelDetailsComponent\n\t],\n\texports: [\n\t\tChannelDetailsComponent\n\t]\n})\nexport class ChannelDetailsModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.module.ts","import { Routes } from '@angular/router';\nimport { ChannelDetailsComponent } from './channel-details.component';\n\nexport const channelDetailsRoutes: Routes = [\n    {\n        path: ':channelId',\n        component: ChannelDetailsComponent\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.routes.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { MessagesService } from './../../../rest/messages.service';\nimport { MessageDto } from '../../../rest/message.dto';\n\n@Injectable()\nexport class ChannelDetailsSevice {\n    private cache: MessageDto[] = [];\n\n    constructor(private messagesService: MessagesService) {\t}\n\n    get() {\n        this.messagesService.get()\n            .subscribe(allMessages => {\n                allMessages.filter(message => {\n                    return message.channelId === undefined;\n                });\n                this.cache = allMessages;\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel-details/channel-details.service.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { ChannelsService } from './../../rest/channels.service';\nimport { ChannelDto } from './../../rest/channel.dto';\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\n\nimport { Subject } from 'rxjs/Subject';\nimport { UserDto } from '../../rest/user.dto';\nimport { UsersService } from '../../rest/users.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n\tselector: 'app-channel',\n\ttemplateUrl: './channel.html'\n})\n\nexport class ChannelComponent implements OnInit  {\n    user: UserDto;\n    channelId: number;\n\n    constructor(private usersService: UsersService,\n        private  router: Router) {\n    }\n\n    ngOnInit() {\n        this.user = this.getUserFromStorage();\n        this.channelId = +this.router.url.split('/')[2];\n    }\n\n    signOut() {\n\t\tlocalStorage.removeItem('user');\n\t\tthis.usersService.destroy();\n\t\t// this.router.navigate(['/', ]);\n\t}\n\n\n    private getUserFromStorage(): UserDto {\n        const data = window.localStorage.getItem('user');\n        if (!data) {\n            return;\n        }\n        return new UserDto(JSON.parse(data));\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.component.ts","module.exports = \"<div class=\\\"sidebar\\\">\\n    <div class=\\\"channel\\\">\\n        <h1>channels <a [routerLink]=\\\"['/new-channel']\\\" class=\\\"channels-link\\\">+</a> </h1>\\n    </div>\\n\\n    <app-channels [currentChannel]=\\\"channelId\\\"></app-channels>\\n    <app-users [currentUser]=\\\"user\\\"></app-users>\\n</div>\\n\\n<div class=\\\"content\\\">\\n<div class=\\\"content-user-info\\\">\\n    <div>{{user.name}}</div>\\n    <button type=\\\"button\\\" (click)=\\\"signOut()\\\" class=\\\"sign_out-user-btn\\\">\\n        Sign out\\n    </button>\\n</div>\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.html\n// module id = ../../../../../src/app/containers/channel/channel.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { ChannelComponent } from './channel.component';\nimport { ChannelDetailsModule } from './channel-details/channel-details.module';\nimport { ChannelsModule } from '../../components/channels/channels.module';\nimport { UsersModule } from '../../components/users/users.module';\nimport { MessagesModule } from '../../components/messages/messages.module';\nimport { MessageSendModule } from '../../components/message-send/message-send.module';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tRouterModule,\n\t\tChannelsModule,\n\t\tChannelDetailsModule,\n\t\tUsersModule,\n\t\tMessagesModule,\n\t\tMessageSendModule,\n\t],\n\tdeclarations: [\n\t\tChannelComponent\n\t],\n\texports: [\n\t\tChannelComponent\n\t]\n})\nexport class ChannelModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.module.ts","import { Routes } from '@angular/router';\nimport { ChannelComponent } from './channel.component';\nimport { ChannelDetailsComponent } from './channel-details/channel-details.component';\nimport { channelDetailsRoutes } from './channel-details/channel-details.routes';\n\nexport const channelRoutes: Routes = [\n    {\n        path: 'channel',\n        component: ChannelComponent,\n        children: [\n            ...channelDetailsRoutes\n        ]\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/channel/channel.routes.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Router } from '@angular/router';\n\nimport { ChannelsService } from '../../rest/channels.service';\nimport { ChannelDto } from '../../rest/channel.dto';\n\n@Component({\n    selector: 'app-new-channel',\n    templateUrl: './new-channel.html'\n})\n\nexport class NewChannelComponent {\n    @Output() sent = new EventEmitter();\n    @Input() channelName: string;\n\n\n    constructor(private channelsService: ChannelsService,\n                 private router: Router ) { }\n\n    submit() {\n        if (this.channelName.length < 2) {\n            return;\n        }\n        const channel = new ChannelDto();\n        channel.id = (new Date).getTime();\n        channel.name = this.channelName;\n        this.channelsService.add(channel).subscribe(() => {\n            this.sent.emit(channel);\n        });\n        this.router.navigate(['/channel/', ]);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.component.ts","module.exports = \"<div class=\\\"new-channel\\\">\\n\\n    <h1>New Channel</h1>\\n    <input type=\\\"text\\\" class=\\\"new-channel-field\\\" name=\\\"channelName\\\" placeholder=\\\"Enter a channel name\\\" [(ngModel)]=\\\"channelName\\\">\\n    <br>\\n    <div class=\\\"new-channel-btn-wrap\\\">\\n        <a [routerLink]=\\\"['/']\\\" class=\\\"new-channel-cancel\\\">\\n            Cancel</a>\\n        <button type=\\\"button\\\" (click)=\\\"submit()\\\" class=\\\"new-channel-btn\\\">\\n            Add\\n        </button>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.html\n// module id = ../../../../../src/app/containers/new-channel/new-channel.html\n// module chunks = main","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { NewChannelComponent } from './new-channel.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tRouterModule\n\t],\n\tdeclarations: [\n\t\tNewChannelComponent\n    ],\n    exports: [\n\t\tNewChannelComponent\n\t]\n})\nexport class NewChannelModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.module.ts","import { Routes } from '@angular/router';\nimport { NewChannelComponent } from './new-channel.component';\n\nexport const newChannelRoutes: Routes = [\n    {\n        path: 'new-channel',\n        component: NewChannelComponent\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/containers/new-channel/new-channel.routes.ts","export class ChannelDto {\n\tid: number;\n\tname: string;\n\n\tconstructor(channel?: ChannelDto) {\n\t\tif (!channel) {\n\t\t\treturn;\n\t\t}\n\t\tthis.id = channel.id;\n\t\tthis.name = channel.name;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/channel.dto.ts","import { Subject } from 'rxjs/Subject';\n\nimport { Rest } from './rest';\nimport { ChannelDto } from './channel.dto';\n\nexport class ChannelsService {\n\tprivate channels = new Subject<ChannelDto[]>();\n\tprivate running = false;\n\n\tget() {\n\t\tthis.running = true;\n\t\tthis.performIntervalSync();\n\t\treturn this.channels;\n\t}\n\n\tadd(channel: ChannelDto) {\n\t\treturn Rest.addChannel(channel);\n\t}\n\n\tprivate performIntervalSync() {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tRest.getChannels()\n\t\t\t.subscribe(channels => {\n\t\t\t\tthis.channels.next(channels);\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.performIntervalSync();\n\t\t\t\t\t},\n\t\t\t\t\t10000\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/channels.service.ts","export class MessageDto {\n\tid: number;\n\ttext: string;\n\tuserId: number;\n\tchannelId: number;\n\tdate: Date;\n\n\tconstructor(message?: MessageDto) {\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\t\tthis.id = message.id;\n\t\tthis.text = message.text;\n\t\tthis.userId = message.userId;\n\t\tthis.channelId = message.channelId;\n\t\tthis.date = message.date;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/message.dto.ts","import { Subject } from 'rxjs/Subject';\n\nimport { Rest } from './rest';\nimport { MessageDto } from './message.dto';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessagesService {\n\tprivate messages = new Subject<MessageDto[]>();\n\tprivate running = false;\n\n\tinit() {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tRest.getMessages()\n\t\t\t.subscribe(messages => {\n\t\t\t\tthis.messages.next(messages);\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.init();\n\t\t\t\t\t},\n\t\t\t\t\t1000\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdestroy() {\n\t\tthis.running = false;\n\t}\n\n\tget() {\n\t\tif (this.running) {\n\t\t\treturn this.messages;\n\t\t}\n\t\tthis.performIntervalSync();\n\t\treturn this.messages;\n\t}\n\n\tadd(message: MessageDto) {\n\t\treturn Rest.addMessage(message);\n\t}\n\n\tprivate performIntervalSync() {\n\t\tthis.running = true;\n\t\tRest.getMessages()\n\t\t\t.subscribe(messages => {\n\t\t\t\tthis.messages.next(messages);\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.performIntervalSync();\n\t\t\t\t\t},\n\t\t\t\t\t1000\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/messages.service.ts","import { Subject } from 'rxjs/Subject';\n\nimport { MessageDto } from './message.dto';\nimport { UserDto } from './user.dto';\nimport { ChannelDto } from './channel.dto';\n\nconst MONGODB_API = 'https://api.mlab.com/api/1/databases/spdu-ng';\nconst API_KEY = '9UxYMuHYHmellW_9udyW2Y-vmVfFvP1E';\nconst USERS_URL = MONGODB_API + '/collections/users?apiKey=' + API_KEY;\nconst MESSAGES_URL = MONGODB_API + '/collections/messages?apiKey=' + API_KEY;\nconst CHANNELS_URL = MONGODB_API + '/collections/channels?apiKey=' + API_KEY;\n\nexport class Rest {\n\tstatic addChannel(channel: ChannelDto) {\n\t\tconst subj = new Subject<ChannelDto>();\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open('POST', CHANNELS_URL, true);\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.send(JSON.stringify(channel));\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (xhr.status !== 200) {\n\t\t\t\tsubj.error(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = JSON.parse(xhr.responseText);\n\t\t\tsubj.next(new ChannelDto(data));\n\t\t\tsubj.complete();\n\t\t};\n\t\treturn subj;\n\t}\n\n\tstatic getChannels() {\n\t\tconst subj = new Subject<ChannelDto[]>();\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open('GET', CHANNELS_URL, true);\n\t\txhr.send();\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (xhr.status !== 200) {\n\t\t\t\tsubj.error(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = JSON.parse(xhr.responseText);\n\t\t\tconst channels = data.map(u => new ChannelDto(u));\n\t\t\tsubj.next(channels);\n\t\t\tsubj.complete();\n\t\t};\n\t\treturn subj;\n\t}\n\n\tstatic addUser(user: UserDto) {\n\t\tconst subj = new Subject<UserDto>();\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open('POST', USERS_URL, true);\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.send(JSON.stringify(user));\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (xhr.status !== 200) {\n\t\t\t\tsubj.error(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = JSON.parse(xhr.responseText);\n\t\t\tsubj.next(new UserDto(data));\n\t\t\tsubj.complete();\n\t\t};\n\t\treturn subj;\n\t}\n\n\tstatic getUsers() {\n\t\tconst subj = new Subject<UserDto[]>();\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open('GET', USERS_URL, true);\n\t\txhr.send();\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (xhr.status !== 200) {\n\t\t\t\tsubj.error(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = JSON.parse(xhr.responseText);\n\t\t\tconst users = data.map(u => new UserDto(u));\n\t\t\tsubj.next(users);\n\t\t\tsubj.complete();\n\t\t};\n\t\treturn subj;\n\t}\n\n\tstatic getMessages() {\n\t\tconst subj = new Subject<MessageDto[]>();\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open('GET', MESSAGES_URL, true);\n\t\txhr.send();\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (xhr.status !== 200) {\n\t\t\t\tsubj.error(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = JSON.parse(xhr.responseText);\n\t\t\tconst messages = data.map(u => new MessageDto(u));\n\t\t\tsubj.next(messages);\n\t\t\tsubj.complete();\n\t\t};\n\t\treturn subj;\n\t}\n\n\tstatic addMessage(message: MessageDto) {\n\t\tconst subj = new Subject<MessageDto>();\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.open('POST', MESSAGES_URL, true);\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.send(JSON.stringify(message));\n\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState !== 4) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (xhr.status !== 200) {\n\t\t\t\tsubj.error(null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = JSON.parse(xhr.responseText);\n\t\t\tsubj.next(new MessageDto(data));\n\t\t\tsubj.complete();\n\t\t};\n\t\treturn subj;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/rest.ts","export class UserDto {\n\tid: number;\n\tname: string;\n\n\tconstructor(user?: UserDto) {\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\t\tthis.id = user.id;\n\t\tthis.name = user.name;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/user.dto.ts","import { Subject } from 'rxjs/Subject';\n\nimport { Rest } from './rest';\nimport { UserDto } from './user.dto';\n\nexport class UsersService {\n\tprivate users = new Subject<UserDto[]>();\n\tprivate running = true;\n\n\tinit() {\n\t\tthis.running = true;\n\t\tthis.performIntervalSync();\n\t}\n\n\tdestroy() {\n\t\tthis.running = false;\n\t}\n\n\tget() {\n\t\treturn this.users;\n\t}\n\n\tadd(user: UserDto) {\n\t\treturn Rest.addUser(user);\n\t}\n\n\tprivate performIntervalSync() {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tRest.getUsers()\n\t\t\t.subscribe(users => {\n\t\t\t\tthis.users.next(users);\n\t\t\t\tsetTimeout(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.init();\n\t\t\t\t\t},\n\t\t\t\t\t10000\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/app/rest/users.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/olesya/spd/angularOK/for github/spdu-ng-channel_hw03/src/main.ts"],"sourceRoot":"webpack:///"}